plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android' // Apply Kotlin Android plugin
}

android {
    namespace 'com.example.taskercalendarplugin'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.taskercalendarplugin"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version" // Add Kotlin stdlib
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // Placeholder for Tasker Plugin SDK - this will need to be replaced with the actual SDK
    // implementation files('libs/tasker-plugin-sdk.jar') // Example if it's a local .jar
    // implementation 'net.dinglisch.android:taskerpluginlibrary:0.2.5' // Example if it's a remote dependency like the common one on Maven Central
    // To use a local .jar, you would typically:
    // 1. Create an 'app/libs' directory if it doesn't exist.
    // 2. Copy your 'tasker-plugin-library.jar' into 'app/libs'.
    // 3. Uncomment the line: implementation files('libs/tasker-plugin-library.jar')
    // 4. Sync Gradle.
}
